name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build and Test Registry Service
        run: |
          cd service-registry
          mvn clean package -DskipTests
          mvn test

      - name: Build and Test Weather Service
        run: |
          cd weather-service
          mvn clean package -DskipTests
          mvn test

      - name: Build and Test Dashboard Service
        run: |
          cd dashboard-service
          mvn clean package -DskipTests
          mvn test

  build-and-push-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Registry Service Image
        run: |
          cd service-registry
          mvn clean package -DskipTests
          docker build -t ghcr.io/tempericolabs/service-registry:latest .
          docker push ghcr.io/tempericolabs/service-registry:latest

      - name: Build Weather Service Image
        run: |
          cd weather-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/tempericolabs/weather-service:latest .
          docker push ghcr.io/tempericolabs/weather-service:latest

      - name: Build Dashboard Service Image
        run: |
          cd dashboard-service
          mvn clean package -DskipTests
          docker build -t ghcr.io/tempericolabs/dashboard-service:latest .
          docker push ghcr.io/tempericolabs/dashboard-service:latest

      - name: Generate Deployment Artifacts
        run: |
          mkdir -p deployment
          cp docker-compose.yml deployment/
          cp prometheus.yml deployment/

      - name: Upload Deployment Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-artifacts
          path: deployment/

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download Deployment Artifacts
        uses: actions/download-artifact@v4
        with:
          name: deployment-artifacts
          path: deployment

      # En un caso real, aquí utilizarías acciones para desplegar a tu servidor
      # Por ejemplo, mediante SSH a un servidor o utilizando un servicio en la nube
      - name: Deploy to Server (Simulation)
        run: |
          echo "Deploying to server..."
          echo "Normally this would deploy the docker-compose.yml to your server via SSH"
          echo "For this tutorial, we'll just list the files that would be deployed"
          ls -la deployment/

      - name: Notify Deployment Status
        run: |
          echo "Deployment completed successfully!"